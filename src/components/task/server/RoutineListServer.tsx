// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
// SERVER fetcher à¸ªà¸³à¸«à¸£à¸±à¸š Routine
// â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
import { prisma } from "@/lib/prisma";
import { getServerSession } from "next-auth/next";
import RoutineTable from "@/components/routines/RoutineTable";  // âœ… path à¹ƒà¸«à¸¡à¹ˆ
//                              â””â”€ðŸ“‚ s          â””â”€ RoutineTable.tsx

export default async function RoutineListServer() {
  const session = await getServerSession();
  if (!session) return null;

  const email = session.user.email!;
  const routines = await prisma.routine.findMany({
    where: { user: { email } },
    include: { RoutineLog: true },
    orderBy: { startAt: "asc" },
  });

  return <RoutineTable routines={routines} />;
}
